package 剑指Offer.排序和查找;

import java.util.Arrays;

/**
 * Created by apple on 2017/8/25.
 * -------------------------查找--旋转数组的最小数字---------------------
 * 把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。
 * 输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。
 * 例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。
 * NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。
 */

public class Ques1 {
    public int minNumberInRotateArray(int [] array) {
        if (array.length == 0)
            return 0;
        Arrays.sort(array);
        return array[0];
    }
}

/**

     思路
         剑指Offer中有这道题目的分析。这是一道二分查找的变形的题目。
         旋转之后的数组实际上可以划分成两个有序的子数组：前面子数组的大小都大于后面子数组中的元素
         注意到实际上最小的元素就是两个子数组的分界线。本题目给出的数组一定程度上是排序的，因此我们试着用二分查找法寻找这个最小的元素。
      ******/
